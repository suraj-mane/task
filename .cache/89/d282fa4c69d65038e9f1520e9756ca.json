{"id":"../node_modules/lodash/fill.js","dependencies":[{"name":"/home/suraj/Documents/Advance_js/task/package.json","includedInParent":true,"mtime":1646456431213},{"name":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/package.json","includedInParent":true,"mtime":1646454041520},{"name":"./_baseFill","loc":{"line":1,"column":23,"index":23},"parent":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/fill.js","resolved":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/_baseFill.js"},{"name":"./_isIterateeCall","loc":{"line":2,"column":29,"index":68},"parent":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/fill.js","resolved":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/_isIterateeCall.js"}],"generated":{"js":"var baseFill = require('./_baseFill'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Fills elements of `array` with `value` from `start` up to, but not\n * including, `end`.\n *\n * **Note:** This method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Array\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.fill(array, 'a');\n * console.log(array);\n * // => ['a', 'a', 'a']\n *\n * _.fill(Array(3), 2);\n * // => [2, 2, 2]\n *\n * _.fill([4, 6, 8, 10], '*', 1, 3);\n * // => [4, '*', '*', 10]\n */\nfunction fill(array, value, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n    start = 0;\n    end = length;\n  }\n  return baseFill(array, value, start, end);\n}\n\nmodule.exports = fill;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/fill.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/lodash/fill.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}}],"sources":{"../node_modules/lodash/fill.js":"var baseFill = require('./_baseFill'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Fills elements of `array` with `value` from `start` up to, but not\n * including, `end`.\n *\n * **Note:** This method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Array\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.fill(array, 'a');\n * console.log(array);\n * // => ['a', 'a', 'a']\n *\n * _.fill(Array(3), 2);\n * // => [2, 2, 2]\n *\n * _.fill([4, 6, 8, 10], '*', 1, 3);\n * // => [4, '*', '*', 10]\n */\nfunction fill(array, value, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n    start = 0;\n    end = length;\n  }\n  return baseFill(array, value, start, end);\n}\n\nmodule.exports = fill;\n"},"lineCount":46}},"error":null,"hash":"4bd575c4082189021929bfc8854c8e47","cacheData":{"env":{}}}