{"id":"../node_modules/lodash/pullAt.js","dependencies":[{"name":"/home/suraj/Documents/Advance_js/task/package.json","includedInParent":true,"mtime":1646456431213},{"name":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/package.json","includedInParent":true,"mtime":1646454041520},{"name":"./_arrayMap","loc":{"line":1,"column":23,"index":23},"parent":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/pullAt.js","resolved":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/_arrayMap.js"},{"name":"./_baseAt","loc":{"line":2,"column":21,"index":60},"parent":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/pullAt.js","resolved":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/_baseAt.js"},{"name":"./_basePullAt","loc":{"line":3,"column":25,"index":99},"parent":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/pullAt.js","resolved":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/_basePullAt.js"},{"name":"./_compareAscending","loc":{"line":4,"column":31,"index":148},"parent":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/pullAt.js","resolved":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/_compareAscending.js"},{"name":"./_flatRest","loc":{"line":5,"column":23,"index":195},"parent":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/pullAt.js","resolved":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/_flatRest.js"},{"name":"./_isIndex","loc":{"line":6,"column":22,"index":233},"parent":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/pullAt.js","resolved":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/_isIndex.js"}],"generated":{"js":"var arrayMap = require('./_arrayMap'),\n    baseAt = require('./_baseAt'),\n    basePullAt = require('./_basePullAt'),\n    compareAscending = require('./_compareAscending'),\n    flatRest = require('./_flatRest'),\n    isIndex = require('./_isIndex');\n\n/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n * var pulled = _.pullAt(array, [1, 3]);\n *\n * console.log(array);\n * // => ['a', 'c']\n *\n * console.log(pulled);\n * // => ['b', 'd']\n */\nvar pullAt = flatRest(function(array, indexes) {\n  var length = array == null ? 0 : array.length,\n      result = baseAt(array, indexes);\n\n  basePullAt(array, arrayMap(indexes, function(index) {\n    return isIndex(index, length) ? +index : index;\n  }).sort(compareAscending));\n\n  return result;\n});\n\nmodule.exports = pullAt;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/pullAt.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/lodash/pullAt.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"../node_modules/lodash/pullAt.js":"var arrayMap = require('./_arrayMap'),\n    baseAt = require('./_baseAt'),\n    basePullAt = require('./_basePullAt'),\n    compareAscending = require('./_compareAscending'),\n    flatRest = require('./_flatRest'),\n    isIndex = require('./_isIndex');\n\n/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n * var pulled = _.pullAt(array, [1, 3]);\n *\n * console.log(array);\n * // => ['a', 'c']\n *\n * console.log(pulled);\n * // => ['b', 'd']\n */\nvar pullAt = flatRest(function(array, indexes) {\n  var length = array == null ? 0 : array.length,\n      result = baseAt(array, indexes);\n\n  basePullAt(array, arrayMap(indexes, function(index) {\n    return isIndex(index, length) ? +index : index;\n  }).sort(compareAscending));\n\n  return result;\n});\n\nmodule.exports = pullAt;\n"},"lineCount":44}},"error":null,"hash":"55e90a5c47d9bfbb32bfb88f79baa63c","cacheData":{"env":{}}}