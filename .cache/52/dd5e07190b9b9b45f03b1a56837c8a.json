{"id":"../node_modules/lodash/pullAllWith.js","dependencies":[{"name":"/home/suraj/Documents/Advance_js/task/package.json","includedInParent":true,"mtime":1646456431213},{"name":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/package.json","includedInParent":true,"mtime":1646454041520},{"name":"./_basePullAll","loc":{"line":1,"column":26,"index":26},"parent":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/pullAllWith.js","resolved":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/_basePullAll.js"}],"generated":{"js":"var basePullAll = require('./_basePullAll');\n\n/**\n * This method is like `_.pullAll` except that it accepts `comparator` which\n * is invoked to compare elements of `array` to `values`. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n *\n * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n * console.log(array);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n */\nfunction pullAllWith(array, values, comparator) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values, undefined, comparator)\n    : array;\n}\n\nmodule.exports = pullAllWith;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/lodash/pullAllWith.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"../node_modules/lodash/pullAllWith.js":"var basePullAll = require('./_basePullAll');\n\n/**\n * This method is like `_.pullAll` except that it accepts `comparator` which\n * is invoked to compare elements of `array` to `values`. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n *\n * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n * console.log(array);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n */\nfunction pullAllWith(array, values, comparator) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values, undefined, comparator)\n    : array;\n}\n\nmodule.exports = pullAllWith;\n"},"lineCount":33}},"error":null,"hash":"8f47cb025bcebc28d578dc9c5b5b384f","cacheData":{"env":{}}}