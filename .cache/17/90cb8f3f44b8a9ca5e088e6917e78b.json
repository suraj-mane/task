{"id":"../node_modules/lodash/_baseFindKey.js","dependencies":[{"name":"/home/suraj/Documents/Advance_js/task/package.json","includedInParent":true,"mtime":1646456431213},{"name":"/home/suraj/Documents/Advance_js/task/node_modules/lodash/package.json","includedInParent":true,"mtime":1646454041520}],"generated":{"js":"/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFindKey;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/lodash/_baseFindKey.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../node_modules/lodash/_baseFindKey.js":"/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFindKey;\n"},"lineCount":24}},"error":null,"hash":"0622f9900e7640440970286b11759488","cacheData":{"env":{}}}